#include <libavcodec/avcodec.h>
#include <cstdio>

using namespace std;

struct SErrName {int value; const char* name;};
#define DEFINE_ERROR(defname) SErrName{defname, #defname},

SErrName g_table[] = {
  DEFINE_ERROR(AVERROR_BSF_NOT_FOUND)
  DEFINE_ERROR(AVERROR_BUG)
  DEFINE_ERROR(AVERROR_BUFFER_TOO_SMALL)
  DEFINE_ERROR(AVERROR_DECODER_NOT_FOUND)
  DEFINE_ERROR(AVERROR_DEMUXER_NOT_FOUND)
  DEFINE_ERROR(AVERROR_ENCODER_NOT_FOUND)
  DEFINE_ERROR(AVERROR_EOF)
  DEFINE_ERROR(AVERROR_EXIT)
  DEFINE_ERROR(AVERROR_EXTERNAL)
  DEFINE_ERROR(AVERROR_FILTER_NOT_FOUND)
  DEFINE_ERROR(AVERROR_INVALIDDATA)
  DEFINE_ERROR(AVERROR_MUXER_NOT_FOUND)
  DEFINE_ERROR(AVERROR_OPTION_NOT_FOUND)
  DEFINE_ERROR(AVERROR_PATCHWELCOME)
  DEFINE_ERROR(AVERROR_PROTOCOL_NOT_FOUND)
  DEFINE_ERROR(AVERROR_STREAM_NOT_FOUND)
  DEFINE_ERROR(AVERROR_BUG2)
  DEFINE_ERROR(AVERROR_UNKNOWN)
  DEFINE_ERROR(AVERROR_EXPERIMENTAL)
  DEFINE_ERROR(AVERROR_INPUT_CHANGED)
  DEFINE_ERROR(AVERROR_OUTPUT_CHANGED)
  DEFINE_ERROR(AVERROR_HTTP_BAD_REQUEST)
  DEFINE_ERROR(AVERROR_HTTP_UNAUTHORIZED)
  DEFINE_ERROR(AVERROR_HTTP_FORBIDDEN)
  DEFINE_ERROR(AVERROR_HTTP_NOT_FOUND)
  DEFINE_ERROR(AVERROR_HTTP_OTHER_4XX)
  DEFINE_ERROR(AVERROR_HTTP_SERVER_ERROR)
  SErrName{AVERROR(EAGAIN), "AVERROR_EAGAIN"}
};

unsigned int n_errors = sizeof(g_table) / sizeof(*g_table);

int main( int c, char** v) {
  printf("{\n");
  for (int idx = 0; idx < n_errors; ++idx) {
    printf("\"%s\" %d\n", g_table[idx].name, g_table[idx].value);
  }
  printf( "}\n");
  return 0;
}
